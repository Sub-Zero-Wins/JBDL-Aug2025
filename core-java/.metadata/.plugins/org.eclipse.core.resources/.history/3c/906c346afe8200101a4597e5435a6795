package lambdaExpressions;

import java.util.function.Predicate;

public class PredicateDemo
{
	public static void main(String[] args) {
		 
		Predicate<Integer>  isEven = n -> n%2==0;
		
		Predicate<Integer>  above18 = n -> n>=18;
		
		Predicate<String>  passwordCheck = s -> {
			return s.length()>=8 && s.matches("^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*])(?!.*\\s).{8,32}$") ;
		
		};
		
		String[] passwords= {"Syed@123","Syed@124","Syed@1","Syed@12","syedsaqib151717881"};
		
		for(String password:passwords) {
			
			if(passwordCheck.test(password)) {
				System.out.println(password);
			}
			
		}
		
		System.out.println(isEven.test(1000));
		
		System.out.println(isEven.test(1));
		
		System.out.println(passwordCheck.test("Syed@123"));
		
		
		
		
		
		

	}
}
